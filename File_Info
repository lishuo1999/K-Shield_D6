#!/usr/bin/env python3

import os
import subprocess

#각각 중요 파일의 수정된 정보 수집

logdir="/var/log" #기본 로그 파일
pwddir="/etc/passwd" # 암호화된 파일
netdir="/etc/sysconfig" #네트워크 설정 파일
memdir="/proc/meminfo" # 메모리 관련 정보 파일

def important_file_info(): 

	try: 

		print(“----------Log File Information----------”)

		subprocess.run(‘find $logdir -name "*.log" -mtime –3 –print’ >> ‘logfile_info.txt’, shell=True)  # 3일 전까지 갱신된 파일 출력
		subprocess.run(‘find $logdir -mmin -30 -type f –ls’ >> ‘logfile_info.txt’, shell=True)  # 30분 이내의 수정한 파일 출력

		subprocess.run(‘find $pwddir –type f -mtime –3 –print’ >> ‘logfile_info.txt’, shell=True) 
		subprocess.run(‘find $pwddir -mmin -30 -type f –ls’ >> ‘logfile_info.txt’, shell=True) 

		subprocess.run(‘find $netdir –type f -mtime –3 –print’ >> ‘logfile_info.txt’, shell=True) 
		subprocess.run(‘find $netdir -mmin -30 -type f –ls’ >> ‘logfile_info.txt’, shell=True) 

		subprocess.run(‘find $memdir –type f -mtime –3 –print’ >> ‘logfile_info.txt’, shell=True) 
		subprocess.run(‘find $memdir -mmin -30 -type f –ls’ >> ‘logfile_info.txt’, shell=True) 

	except Exception as e:
		print(“----------Error----------”)
		

# 실행권한 또는 특수권한을 가진 파일 정보 수집

def executables():

	try: 

		print(“----------Excutables File Information----------”)

		subprocess.run(‘find / -type f -perm -o+rx -print0 | xargs -0 sha1sum ’ >> ‘Excutables_info.txt’, shell=True) # 해시값 확인

	except Exception as e:
		print(“----------Error----------”)






# 숨긴 파일 찾기

def hidden_file_info():

	try: 

		print(“----------Hidden File Information----------”)

		subprocess.run(‘find /var –type f –name “.*”’ >> ‘hidden_info.txt’, shell=True) # /var 디렉터린 내 숨긴 파일 찾기
		subprocess.run(‘find /bin –type f –name “.*”’ >> ‘hidden_info.txt’, shell=True) # /bin 디렉터린 내 숨긴 파일 찾기
		subprocess.run(‘find /etc –type f –name “.*”’ >> ‘hidden_info.txt’, shell=True) # /etc 디렉터린 내 숨긴 파일 찾기
		subprocess.run(‘find /proc –type f –name “.*”’ >> ‘hidden_info.txt’, shell=True) # /proc 디렉터린 내 숨긴 파일 찾기

	except Exception as e:
		print(“----------Error----------”)


def count_file_info():

	try:
	
		print(“----------File Count Information----------”)

		subprocess.run('isof

			       
	except Exception as e:
		print(“----------Error----------”)

	
			       
			       
def main()
	return important_file_info(), hidden_file_info()

     
			       
if __name__ == '__main__':
	main()
  
